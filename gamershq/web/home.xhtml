<html xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html" xmlns:p="http://primefaces.org/ui" xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:pe="http://primefaces.org/ui/extensions">
<f:view>
	<head>
<meta charset="UTF-8">
<link href='http://fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700' rel='stylesheet' type='text/css' />
<title>Gamers Headquarters</title>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
<script src="/js/jquery-2.1.0.min.js"></script>
<style type="text/css">
html {
	background: url(img/bkg.jpg) no-repeat center center fixed;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

.title {
	position: absolute;
	right: 10%;
	top: 13%;
	background-color: white;
	width: 450px;
	padding: 30px 20px 30px 30px;
	-webkit-border-radius: 10px 10px 10px 10px;
	border-radius: 10px 10px 10px 10px;
	-webkit-box-shadow: inset 0 0 10px 1px #8F8F8F;
	box-shadow: inset 0 0 10px 1px #8F8F8F;
}

h2 {
	font-family: Lato;
}

.uiGrid._51mz {
	display: block;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
}
</style>

	</head>
	<body>
		<div id="fb-root"></div>
		<script>
			window.fbAsyncInit = function() {
				FB.init({
					appId : '1386950074914294',
					status : true, // check login status
					cookie : true, // enable cookies to allow the server to access the session
					xfbml : true
				// parse XFBML
				});

				// Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
				// for any authentication related change, such as login, logout or session refresh. This means that
				// whenever someone who was previously logged out tries to log in again, the correct case below 
				// will be handled. 
				FB.Event.subscribe('auth.authResponseChange',
						function(response) {
							// Here we specify what we do with the response anytime this event occurs. 
							if (response.status === 'connected') {
								// The response object is returned with a status field that lets the app know the current
								// login status of the person. In this case, we're handling the situation where they 
								// have logged in to the app.
								testAPI();
							} else if (response.status === 'not_authorized') {
								// In this case, the person is logged into Facebook, but not into the app, so we call
								// FB.login() to prompt them to do so. 
								// In real-life usage, you wouldn't want to immediately prompt someone to login 
								// like this, for two reasons:
								// (1) JavaScript created popup windows are blocked by most browsers unless they 
								// result from direct interaction from people using the app (such as a mouse click)
								// (2) it is a bad experience to be continually prompted to login upon page load.
								FB.login();
							} else {
								// In this case, the person is not logged into Facebook, so we call the login() 
								// function to prompt them to do so. Note that at this stage there is no indication
								// of whether they are logged into the app. If they aren't then they'll see the Login
								// dialog right after they log in to Facebook. 
								// The same caveats as above apply to the FB.login() call here.
								FB.login();
							}
						});
			};

			// Load the SDK asynchronously
			(function(d) {
				var js, id = 'facebook-jssdk', ref = d
						.getElementsByTagName('script')[0];
				if (d.getElementById(id)) {
					return;
				}
				js = d.createElement('script');
				js.id = id;
				js.async = true;
				js.src = "//connect.facebook.net/pt_BR/all.js";
				ref.parentNode.insertBefore(js, ref);
			}(document));

			// Here we run a very simple test of the Graph API after login is successful. 
			// This testAPI() function is only called in those cases. 
			function testAPI() {
				console.log('Welcome!  Fetching your information.... ');
				FB.api('/me', function(response) {
					alert('Good to see you, ' + response.name + '.');
					$("myform\\:nome").value = response.name;
					$().click();
				});
			}
		</script>
		<h:form id="myform">
			<h:inputHidden id="nome" value="#{bean.user.nome}" />
			<h:commandButton type="hide" actionListener="#{bean.funcao}" />
		</h:form>
		<!--
  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
  present a graphical Login button that triggers the FB.login() function when clicked. -->



		<div class="title">
			<img style="display: block; margin-left: auto; margin-right: auto;" src="img/logo.png" />

			<h2 style="text-align: center;">Fa√ßa parte do maior portal de Games do mundo!</h2>

			<br />

			<fb:login-button show-faces="true" width="200" max-rows="1"></fb:login-button>
		</div>



	</body>

</f:view>
</html>